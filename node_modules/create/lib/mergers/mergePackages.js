import * as semver from "semver";
import { removeEmptyEntries } from "./removeEmptyEntries";
export function mergePackages(first, second) {
    if (!first) {
        return second;
    }
    if (!second) {
        return first;
    }
    const result = {};
    for (const key of [
        "dependencies",
        "devDependencies",
        "peerDependencies",
    ]) {
        result[key] = mergePackageEntries(result, key, first[key], second[key]);
    }
    return removeEmptyEntries(result);
}
function mergePackageEntries(result, key, first, second) {
    if (!first) {
        return second;
    }
    if (!second) {
        return first;
    }
    const entries = {};
    for (const packageName in first) {
        if (!(packageName in second)) {
            entries[packageName] = first[packageName];
            continue;
        }
        if (!semver.intersects(first[packageName], second[packageName])) {
            throw new Error(`Conflicting ${key} entries for ${packageName}: ${first[packageName]} vs. ${second[packageName]}.`);
        }
        // TODO: Find a way to simplify to highest?
        entries[packageName] = `${first[packageName]} || ${second[packageName]}`;
    }
    return entries;
}
//# sourceMappingURL=mergePackages.js.map