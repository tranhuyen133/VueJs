import { AnyOptionsSchema, InferredSchema } from "../options";
import { Block, BlockProducerWithOptions, BlockProducerWithoutOptions } from "../types/blocks";
export type BlockDefinition<BlockOptionsSchema extends AnyOptionsSchema | undefined> = BlockOptionsSchema extends object ? BlockDefinitionWithOptions<BlockOptionsSchema> : BlockDefinitionWithoutOptions;
export interface BlockDefinitionWithoutOptions {
    produce: BlockProducerWithoutOptions;
}
export interface BlockDefinitionWithOptions<BlockOptionsSchema extends AnyOptionsSchema> {
    options: BlockOptionsSchema;
    produce: BlockProducerWithOptions<InferredSchema<BlockOptionsSchema>>;
}
export declare function createBlock<BlockOptionsSchema extends AnyOptionsSchema | undefined = undefined>(blockDefinition: BlockDefinition<BlockOptionsSchema>): Block<InferredSchema<BlockOptionsSchema>>;
