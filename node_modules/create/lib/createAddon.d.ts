import { z } from "zod";
import { AddonDefinition } from "./createBlock";
import { AnyOptionsSchema } from "./options";
import { ContextWithOptions } from "./shared";
export declare function createAddon<AddonOptionsSchema extends AnyOptionsSchema, BlockOptionsSchema extends AnyOptionsSchema>(addonDefinition: AddonDefinition<AddonOptionsSchema, BlockOptionsSchema>): (context: ContextWithOptions<AddonOptionsSchema>) => Promise<z.objectUtil.addQuestionMarks<z.baseObjectOutputType<BlockOptionsSchema>, any> extends infer T ? { [k in keyof T]: z.objectUtil.addQuestionMarks<z.baseObjectOutputType<BlockOptionsSchema>, any>[k]; } : never>;
