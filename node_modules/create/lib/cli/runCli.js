import { runPreset } from "../runners/runPreset";
import { promptForPresetOptions } from "./promptForPresetOptions";
import { setupContext } from "./setupContext";
export async function runCli(args) {
    const presetPath = args[0];
    const presetModule = (await import(presetPath));
    if (!("default" in presetModule)) {
        throw new Error(`${presetPath} should have a default exported preset.`);
    }
    const preset = presetModule.default;
    if (!isPreset(preset)) {
        throw new Error(`${presetPath}'s default export should be a preset.`);
    }
    console.log(`Let's ✨ create ✨ a repository for you based on ${preset.documentation.name}!`);
    const options = await promptForPresetOptions(preset.options);
    const context = setupContext();
    await runPreset(preset, options, context);
}
function isPreset(value) {
    return (typeof value === "function" &&
        "documentation" in value &&
        "repository" in value);
}
//# sourceMappingURL=runCli.js.map